<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Bean的三种实例化方式 -->
    <!-- 1.使用无参的构造器 -->
    <!-- 第一种方式:使用默认构造函数创建。
        在spring的配置文件中使用bean标签，配以id和class属性之后，且没有其他属性和标签时，
        采用的就是默认构造函数创建bean对象，此时如果类中没有默认构造函数，则对象无法创建。-->
    <bean id="bean1" class="com.Bean1" init-method="init" destroy-method="destroy"/>

    <!-- 2.使用静态工厂方法(static)  factory-method 是工厂提供的静态方法 -->
    <!--第二种方式:使用工厂中的静态方法创建对象(使用某个类中的静态方法创建对象，并存入spring容器)-->
    <bean id="bean2" class="com.Bean2Factory" factory-method="getInstance"/>

    <!-- 3.配置实例化工厂的方法 -->
    <!--第三种方式:使用普通工厂中的方法创建对象(使用某个类中的方法创建对象，并存入spring容器)-->
    <bean id="bean3Factory" class="com.Bean3Factory"/><!--我们现在有一个工厂对象，它里面有一个方法可以位我们创建我们想要的Bean3对象-->
    <!--id：要获取的对象   factory-bean：指定哪个是那个工厂Bean  factory-method：指定哪个方法来获取对象-->
    <bean id="bean3" factory-bean="bean3Factory" factory-method="getInstance"/>
    <!--我们现在要创建这个Bean3对象，它是由bean3Factory对象指向的工厂中的getInstance方法来获取的-->
    <!--第一个bean使用的构造器方法实例化工厂类，第二个bean中的id是实例化对象的名称，factory-bean对应的被实例化的工厂类的对象名称，也就是第一个bean的id，factory-method是非静态工厂方法-->
    <!--   即：要创建Bean3对象，流程是：factory-bean="bean3Factory"——>id="bean3Factory"——>factory-method="getInstance"   -->

    <!-- end.Bean的三种实例化方式 -->

    <!--假如模拟一个工厂类(该类可能是存在于jar包中的，我们无法通过修改源码的方式来提供默认构造函数)时，我们就可以使用后两种方式来实例化Bean了-->
    </beans>